1. 모든 시작은 document.~~~로 !!

2. document.getElementById("") => 말 그대로 html태그 중에 사용하고 싶은 부분을 id=""로 설정을 하고 가져 올 수 있음.

3. document.getElementByClassName == 많은 elements요소를 가져와야 할 때 사용 (array로 옴)

4. document.querySelector(""); == elements를  css방식으로 찾을 수 있음.
 - 같은 요소가 여러개면 맨 처음꺼가 나옴
 - const title = document.querySelector("#hello"); 이거랑 밑에꺼랑 같은거임
   const title = document.getElementById("hello");

5. document.querySelectorAll("") == 여러 요소를 가져와서 array형태로 묶음.

6. event란?? 엄청많지 종류가 그 중 click event를 알아보자
	- const ~~ = ();
	- function 이름() {
	  ~~~~~
	}
	- const로 받아온 이름.addEventListener("", 함수이름);
	- 즉 페이지에서 element를 받아 온 후 >> event listener를 추가 한 후 >> 그 event를 listen하고 반응하면 끝

2022-01-26

1. event에서 onclick이나 onmouse~~에서 on을 생략하고 써야함.

2. Window.event도 존재 --> 말 그대로 인터넷 창과 관련되어 있음

3. h1.onclick = handleTitleClick; == h1.addEventListener"click", handleTitleClick); 같은 표현방법임!

4. 만약에 색을 변경하고싶어 ( 파랑 > 핑크 > 파랑 > 핑크 ... 어떻게 하면 될까?) ==== true로 비교하면 됨
	.- element를 찾아라
	.- event를 linten해라
	.- event에 반응해라

5. JS 안에서 html을 불러오고 색을 거기서 변경하는건 좋지 못함!!
	.- css폴더에서 class를 추가 한 후 JS에서 그 className을 통해서 변경이 가능
	.- but html에 기존의 class가 있다면??
	.- 한 가지 변경만 생겨도 그 class와 관련된 css, JS를 다 고쳐줘야하는 번거로움이 생김
	.- 그래서~~~~ 6.에서 알아봄

6. const변수를 사용해서 변경할 class를 선언하고 if문을 통해 사용해준다.


2022-01-28

1. classList.contains , .remove , .add 사용해봄

2. toggle function = class name이 존재하는지 확인
	.- toggle은 ()안에 값이 존재하면 제거해주고 ()안에 값이 없다면 추가해주는 신기한 함수


- Application 만들기 (part4!!)

1. 이름이 뭔지 물어 본 후 그 데이터 값 받아오기를 해보자
	.- document.querySel~~나 getElement나 다 상관없음 우선 받아오고 난 후
	.- event를 이용해서 함수를 호출하면 됨

2. 조건 : username이 비어 있으면 안됨, 너무 긴 username도 안됨 (.length로 확인)

3. 함수이름에 ()를 하는 순간 즉시 실행하라는 뜻
4. event가 발생할 때 브라우저는 function을 호출하게 되는데 argument를 가지고 호출
	.- .preventDefault()를 통해 정보를 확인 할 수 있고 submit의 동작을 막아 줄 수 있음...? 잘 모르겠다


5. Form은  submit과 관련 , a링크는 ??

2022-02-04

6. form에서 입력되면 form은 숨기고 h1은 표시되도록 해볼 수 있나?
	.- 가능함

	.-  이 둘은 같은 표기법 greeting.innerText = "Hello " + username;  === greeting.innerText = `Hello ${username}`;

7. 값을 저장하기 위한 방법
	.- 브라우저엔 local storage가 존재,  이것을 이용해서 저장하고 나중에 가져다 쓸 수 있음.
	.- 작은 DB라고 생각하면 편함 (아직 초반이라 이렇게 사용한 듯)
	.- localStorage.setItem, getItem, removeItem을 이용하면 됨
	.- localStorage.setItem("loginUser"(key), "영수"(value)) 이런식으로 먼저 저장이 가능함.

 8. local storage에 username이 존재하는지 보고 >> 없으면  form보이게, 있으면 h1만 보이게 설정
	.- 성공

Part4 종료

Part5 시작(시간 관련!! 현재 시간 틱톡틱톡)

1. intervals 와 timeout 이란?
	.- intervals : '매번' 일어나야 하는 것 ex) 2초마다 뭐를 해라 
	.- setInterval(함수이름, 간격을ms로표현); -> 이렇게 사용

	.- timeout : "한번 만" 정해진 시간에 표현
	.- setTimeout () -> 위랑 똑같음

2. new Date() -> 현재 시간 표현
	.- const date = new Date(); 로 선언 후 date.get~~~으로 많은 정보를 가져올 수 있음.

3. String을 문자 두 개로 채워보기
	.- padStart() 로 사용하면 끝. padEnd()도 있음
	.- padStart(길이, 그 길이보다 부족하면 추가할 것)
	
	.- getHours()에는 padStart()를 사용할 수 없음 -> Hours가 number라 

Part5 종료

2022-02-07
Part6 시작

* 3. ‘뭐해?‘라는 두 글자에 ‘네가 보고 싶어’ 나의 속마음을 담아 (아이유 - Blueming)
* 4. So are you happy now Finally happy now are you (아이유 - 에잇)
* 5. I'm such a good surfer 가라앉지 않기 (아이유 - 어푸)
* 6. 강자에게 더 세게 I love gamble (아이유 - Coin)
* 7. 푸르른 우리 위로 커다란 strawberry moon 한 스쿱 나에게 너를 맡겨볼래 (아이유 - strawberry moon)

1. Randomness ?  : 무작위성
2. Math.randon() === 0~1사이의 무작위 값 추출
3. Math.round() === 반올림
4. Math.ceil() === 무조건 올림
5. Math.floor() === 무조건 내림
6. array.length === array의 길이




 










